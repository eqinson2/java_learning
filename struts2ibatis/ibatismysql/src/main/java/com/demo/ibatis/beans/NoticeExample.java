package com.demo.ibatis.beans;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NoticeExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected String limitClauseStart;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected String limitClauseCount;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public NoticeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected NoticeExample(NoticeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void setLimitClauseStart(String limitClauseStart) {
		this.limitClauseStart = limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public String getLimitClauseStart() {
		return limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void setLimitClauseCount(String limitClauseCount) {
		this.limitClauseCount = limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public String getLimitClauseCount() {
		return limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table notice
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andSenderIsNull() {
			addCriterion("sender is null");
			return this;
		}

		public Criteria andSenderIsNotNull() {
			addCriterion("sender is not null");
			return this;
		}

		public Criteria andSenderEqualTo(String value) {
			addCriterion("sender =", value, "sender");
			return this;
		}

		public Criteria andSenderNotEqualTo(String value) {
			addCriterion("sender <>", value, "sender");
			return this;
		}

		public Criteria andSenderGreaterThan(String value) {
			addCriterion("sender >", value, "sender");
			return this;
		}

		public Criteria andSenderGreaterThanOrEqualTo(String value) {
			addCriterion("sender >=", value, "sender");
			return this;
		}

		public Criteria andSenderLessThan(String value) {
			addCriterion("sender <", value, "sender");
			return this;
		}

		public Criteria andSenderLessThanOrEqualTo(String value) {
			addCriterion("sender <=", value, "sender");
			return this;
		}

		public Criteria andSenderLike(String value) {
			addCriterion("sender like", value, "sender");
			return this;
		}

		public Criteria andSenderNotLike(String value) {
			addCriterion("sender not like", value, "sender");
			return this;
		}

		public Criteria andSenderIn(List<String> values) {
			addCriterion("sender in", values, "sender");
			return this;
		}

		public Criteria andSenderNotIn(List<String> values) {
			addCriterion("sender not in", values, "sender");
			return this;
		}

		public Criteria andSenderBetween(String value1, String value2) {
			addCriterion("sender between", value1, value2, "sender");
			return this;
		}

		public Criteria andSenderNotBetween(String value1, String value2) {
			addCriterion("sender not between", value1, value2, "sender");
			return this;
		}

		public Criteria andTitleIsNull() {
			addCriterion("title is null");
			return this;
		}

		public Criteria andTitleIsNotNull() {
			addCriterion("title is not null");
			return this;
		}

		public Criteria andTitleEqualTo(String value) {
			addCriterion("title =", value, "title");
			return this;
		}

		public Criteria andTitleNotEqualTo(String value) {
			addCriterion("title <>", value, "title");
			return this;
		}

		public Criteria andTitleGreaterThan(String value) {
			addCriterion("title >", value, "title");
			return this;
		}

		public Criteria andTitleGreaterThanOrEqualTo(String value) {
			addCriterion("title >=", value, "title");
			return this;
		}

		public Criteria andTitleLessThan(String value) {
			addCriterion("title <", value, "title");
			return this;
		}

		public Criteria andTitleLessThanOrEqualTo(String value) {
			addCriterion("title <=", value, "title");
			return this;
		}

		public Criteria andTitleLike(String value) {
			addCriterion("title like", value, "title");
			return this;
		}

		public Criteria andTitleNotLike(String value) {
			addCriterion("title not like", value, "title");
			return this;
		}

		public Criteria andTitleIn(List<String> values) {
			addCriterion("title in", values, "title");
			return this;
		}

		public Criteria andTitleNotIn(List<String> values) {
			addCriterion("title not in", values, "title");
			return this;
		}

		public Criteria andTitleBetween(String value1, String value2) {
			addCriterion("title between", value1, value2, "title");
			return this;
		}

		public Criteria andTitleNotBetween(String value1, String value2) {
			addCriterion("title not between", value1, value2, "title");
			return this;
		}

		public Criteria andSendtimeIsNull() {
			addCriterion("sendtime is null");
			return this;
		}

		public Criteria andSendtimeIsNotNull() {
			addCriterion("sendtime is not null");
			return this;
		}

		public Criteria andSendtimeEqualTo(String value) {
			addCriterion("sendtime =", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeNotEqualTo(String value) {
			addCriterion("sendtime <>", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeGreaterThan(String value) {
			addCriterion("sendtime >", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeGreaterThanOrEqualTo(String value) {
			addCriterion("sendtime >=", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeLessThan(String value) {
			addCriterion("sendtime <", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeLessThanOrEqualTo(String value) {
			addCriterion("sendtime <=", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeLike(String value) {
			addCriterion("sendtime like", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeNotLike(String value) {
			addCriterion("sendtime not like", value, "sendtime");
			return this;
		}

		public Criteria andSendtimeIn(List<String> values) {
			addCriterion("sendtime in", values, "sendtime");
			return this;
		}

		public Criteria andSendtimeNotIn(List<String> values) {
			addCriterion("sendtime not in", values, "sendtime");
			return this;
		}

		public Criteria andSendtimeBetween(String value1, String value2) {
			addCriterion("sendtime between", value1, value2, "sendtime");
			return this;
		}

		public Criteria andSendtimeNotBetween(String value1, String value2) {
			addCriterion("sendtime not between", value1, value2, "sendtime");
			return this;
		}
	}
}