package com.demo.ibatis.dao;

import com.demo.ibatis.beans.Sms;
import com.demo.ibatis.beans.SmsExample;
import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;

public class SmsDAOImpl implements SmsDAO {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public SmsDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public void setSqlMapClient(SqlMapClient sqlMapClient) {
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public SqlMapClient getSqlMapClient() {
		return sqlMapClient;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public Integer insert(Sms record) throws SQLException {
		Object newKey = sqlMapClient.insert("sms.abatorgenerated_insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByPrimaryKeyWithoutBLOBs(Sms record) throws SQLException {
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByPrimaryKeyWithBLOBs(Sms record) throws SQLException {
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByPrimaryKeySelective(Sms record) throws SQLException {
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	@SuppressWarnings("unchecked")
	public List<Sms> selectByExampleWithoutBLOBs(SmsExample example) throws SQLException {
		List<Sms> list = (List<Sms>) sqlMapClient.queryForList("sms.abatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	@SuppressWarnings("unchecked")
	public List<Sms> selectByExampleWithBLOBs(SmsExample example) throws SQLException {
		List<Sms> list = (List<Sms>) sqlMapClient.queryForList("sms.abatorgenerated_selectByExampleWithBLOBs", example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public Sms selectByPrimaryKey(Integer id) throws SQLException {
		Sms key = new Sms();
		key.setId(id);
		Sms record = (Sms) sqlMapClient.queryForObject("sms.abatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int deleteByExample(SmsExample example) throws SQLException {
		int rows = sqlMapClient.delete("sms.abatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		Sms key = new Sms();
		key.setId(id);
		int rows = sqlMapClient.delete("sms.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int countByExample(SmsExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("sms.abatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByExampleSelective(Sms record, SmsExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByExampleWithBLOBs(Sms record, SmsExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByExampleWithBLOBs", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	public int updateByExampleWithoutBLOBs(Sms record, SmsExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("sms.abatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table sms
	 * 
	 * @abatorgenerated Wed Dec 03 13:46:53 CST 2008
	 */
	private static class UpdateByExampleParms extends SmsExample {
		private Object record;

		public UpdateByExampleParms(Object record, SmsExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}